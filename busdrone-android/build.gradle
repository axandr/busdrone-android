buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://download.crashlytics.com/maven' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.4.2'
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.0.0'
    }
}

apply plugin: 'android'
apply plugin: 'crashlytics'

repositories {
    mavenCentral()
    maven { url 'http://download.crashlytics.com/maven' }
}

dependencies {
    compile 'com.android.support:support-v4:13.0.0'
    compile 'com.google.code.gson:gson:2.2.2'
    compile 'com.google.android.gms:play-services:3.1.36'
    compile 'com.google.guava:guava:14.0'
    compile 'com.squareup.dagger:dagger:1.0.0'
    compile 'com.jakewharton:butterknife:1.3.0'
    compile 'com.squareup:otto:1.3.3'
    compile 'com.crashlytics.android:crashlytics:1.0.0'
    compile files('../libs/android-websockets.jar')
}

def password = null

def askPassword() {
  return 'security -q find-generic-password -g -l busdrone-release'.execute().err.text.split('"')[1]
}

afterEvaluate {
    validateReleaseSigning.doFirst {
        password = askPassword()
        signingConfig.storePassword = password
        signingConfig.keyPassword = password
    }
}

android {
    compileSdkVersion 17
    buildToolsVersion "17.0.0"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 17
    }

    signingConfigs {
        release {
            storeFile file('../release.keystore')
            keyAlias 'busdrone-release'
            storePassword ''
            keyPassword ''
        }

        debug {
            storeFile file('../debug.keystore')
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
}
